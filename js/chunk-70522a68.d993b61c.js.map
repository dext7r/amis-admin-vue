{"version":3,"sources":["webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/decode.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/format.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/lib/re.js","webpack:///./node_modules/.pnpm/markdown-it-html5-media@0.7.1/node_modules/markdown-it-html5-media/lib/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/encode.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/.pnpm/amis@1.9.0_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/amis/lib/utils/markdown.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/.pnpm/punycode@1.4.1/node_modules/punycode/punycode.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/index.js","webpack:///./node_modules/.pnpm/amis@1.9.0_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/amis/lib/components/Markdown.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/token.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/index.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/parse.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js"],"names":["module","exports","state","startLine","endLine","content","terminate","i","l","token","pos","max","level","marker","oldParentType","nextLine","terminatorRules","md","block","ruler","getRules","sCount","blkIndent","parentType","isEmpty","bMarks","tShift","eMarks","src","charCodeAt","skipChars","skipSpaces","length","getLines","trim","line","push","String","markup","fromCharCode","map","children","lineMax","assign","unescapeAll","escapeHtml","default_rules","Renderer","this","rules","code_inline","tokens","idx","options","env","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","split","slice","join","highlight","indexOf","attrIndex","attrs","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","prototype","result","nextToken","needLf","hidden","nesting","tag","type","renderInline","len","render","obj","sources","Array","call","arguments","forEach","source","Object","keys","key","_class","toString","isString","isObject","isRegExp","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","k","hasOwnProperty","defaultSchemas","validate","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","alias","slist","filter","schema_test","src_ZPCc","schema_search","pretest","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","exec","testSchemaAt","search","list","keepOld","isArray","concat","sort","el","reverse","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","chain","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","enable","ignoreInvalid","enableOnly","disable","chainName","last","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","c","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","_rules","ParserBlock","tokenize","ok","hasEmptyLines","maxNesting","skipEmptyLines","tight","parse","outTokens","State","isTerminatorChar","ch","silent","posMax","pending","NEWLINES_RE","NULL_RE","isSpace","cnt","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","pmax","ws","parseLinkLabel","parseLinkDestination","parseLinkTitle","ESCAPED","decodeCache","getDecodeCache","exclude","cache","toUpperCase","decode","string","defaultChars","seq","b1","b2","b3","b4","chr","parseInt","componentChars","Core","process","arrayReplaceAt","isLinkOpen","isLinkClose","j","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","normalizeLink","validateLink","normalizeLinkText","Token","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","curr","tokens_meta","isWhiteSpace","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","substr","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","tmp","skipSpacesBack","skipCharsBack","adjustTab","initial","lastLineEmpty","lines","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","EMAIL_RE","AUTOLINK_RE","protocol","slashes","auth","hostname","port","pathname","hash","StateBlock","s","indent","indent_found","ddIndent","listIndent","from","min","code","begin","keepLastLF","lineIndent","first","queue","lineStart","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","validAudioExtensions","validVideoExtensions","messages","en","translate","language","messageKey","messageParams","message","param","tokenizeImagesAndMedia","label","labelEnd","labelStart","ref","res","title","href","oldPos","helpers","utils","references","normalizeReference","inline","mediaType","guessMediaType","extensionMatch","extension","renderMedia","html5Media","fallbackText","description","translateFn","videoAttrs","undefined","audioAttrs","renderer","video","audio","StateCore","inlineMode","parseReference","disableNested","found","prevPos","skipToken","postProcess","startDelim","endDelim","loneMarkers","pop","scanned","scanDelims","can_open","can_close","entities","has","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","StateInline","pendingLevel","_prev_delimiters","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","encodeCache","getEncodeCache","encode","keepEscaped","nextCode","encodeURIComponent","ParserCore","ParserInline","mdurl","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","toASCII","er","format","toUnicode","MarkdownIt","presetName","core","configure","presets","components","rules2","ruler2","missed","use","plugin","args","apply","parseInline","params","mem","haveEndMarker","defineProperty","value","tslib_1","markdown_it_1","__importDefault","markdown_it_html5_media_1","markdown","default_1","html","getLine","escapedSplit","isEscaped","current","substring","lineText","columns","columnCount","aligns","tableLines","tbodyLines","firstCh","secondCh","tok","_rules2","_hasOwnProperty","object","TypeError","newElements","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","unescapeMd","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","ucmicro","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","root","nodeType","freeGlobal","global","window","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","error","RangeError","array","mapDomain","parts","labels","encoded","ucs2decode","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","out","basic","oldi","w","baseMinusT","inputLength","n","bias","lastIndexOf","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","_endLine","destEndPos","destEndLineNo","block_names","HTML_SEQUENCES","Any","Cc","Cf","P","Z","react_1","markdown_1","Markdown","_super","props","_this","htmlRef","bind","__extends","dom","_render","componentDidUpdate","nextProps","_a","innerHTML","createElement","className","defaultProps","Component","meta","attrPush","attrData","attrSet","attrGet","attrJoin","isLetter","lc","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","isStrong","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm"],"mappings":"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","file":"js/chunk-70522a68.d993b61c.js","sourcesContent":["// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n/* eslint complexity: \"off\" */\n\n\n/**\n * A minimalist `markdown-it` plugin for parsing video/audio references inside\n * markdown image syntax as `<video>` / `<audio>` tags.\n *\n * @namespace HTML5Media\n */\n\n// We can only detect video/audio files from the extension in the URL.\n// We ignore MP1 and MP2 (not in active use) and default to video for ambiguous\n// extensions (MPG, MP4)\nconst validAudioExtensions = ['aac', 'm4a', 'mp3', 'oga', 'ogg', 'wav'];\nconst validVideoExtensions = ['mp4', 'm4v', 'ogv', 'webm', 'mpg', 'mpeg'];\n\n/**\n * @property {Object} messages\n * @property {Object} messages.languageCode\n *  a set of messages identified with a language code, typically an ISO639 code\n * @property {String} messages.languageCode.messageKey\n *  an individual translation of a message to that language, identified with a\n *  message key\n * @typedef {Object} MessagesObj\n */\nlet messages = {\n  en: {\n    'html5 video not supported': 'Your browser does not support playing HTML5 video.',\n    'html5 audio not supported': 'Your browser does not support playing HTML5 audio.',\n    'html5 media fallback link': 'You can <a href=\"%s\" download>download the file</a> instead.',\n    'html5 media description': 'Here is a description of the content: %s'\n  }\n};\n\n/**\n * You can override this function using options.translateFn.\n *\n * @param {String} language\n *  a language code, typically an ISO 639-[1-3] code.\n * @param {String} messageKey\n *  an identifier for the message, typically a short descriptive text\n * @param {String[]} messageParams\n *  Strings to be substituted into the message using some pattern, e.g., %s or\n *  %1$s, %2$s. By default we only use a simple %s pattern.\n * @returns {String}\n *  the translation to use\n * @memberof HTML5Media\n */\nlet translate = function(language, messageKey, messageParams) {\n\n  // Revert back to English default if no message object, or no translation\n  // for this language\n  if (!messages[language] || !messages[language][messageKey])\n    language = 'en';\n\n  if (!messages[language])\n    return '';\n\n  let message = messages[language][messageKey] || '';\n\n  if (messageParams)\n    for (let param of messageParams)\n      message = message.replace('%s', param);\n\n  return message;\n};\n\n\n/**\n * A fork of the built-in image tokenizer which guesses video/audio files based\n * on their extension, and tokenizes them accordingly.\n *\n * @param {Object} state\n *  Markdown-It state\n * @param {Boolean} silent\n *  if true, only validate, don't tokenize\n * @param {MarkdownIt} md\n *  instance of Markdown-It used for utility functions\n * @returns {Boolean}\n * @memberof HTML5Media\n */\nfunction tokenizeImagesAndMedia(state, silent, md) {\n  let attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title,\n    token, tokens, start;\n  let href = '',\n    oldPos = state.pos,\n    max = state.posMax;\n\n  // Exclamation mark followed by open square bracket - ![ - otherwise abort\n  if (state.src.charCodeAt(state.pos) !== 0x21 ||\n    state.src.charCodeAt(state.pos + 1) !== 0x5B)\n    return false;\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // Parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0)\n    return false;\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28) { // Parenthesis: (\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A) // LF \\n\n        break;\n    }\n    if (pos >= max)\n      return false;\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A)\n        break;\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!md.utils.isSpace(code) && code !== 0x0A)\n          break;\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29) { // Parenthesis: )\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined')\n      return false;\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B) { // Bracket: [\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label)\n      label = state.src.slice(labelStart, labelEnd);\n\n    ref = state.env.references[md.utils.normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n\n  if (silent)\n    return true;\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  content = state.src.slice(labelStart, labelEnd);\n\n  state.md.inline.parse(\n    content,\n    state.md,\n    state.env,\n    tokens = []\n  );\n\n  const mediaType = guessMediaType(href);\n  const tag = mediaType == 'image' ? 'img' : mediaType;\n\n  token = state.push(mediaType, tag, 0);\n  token.attrs = attrs = [\n    ['src', href]\n  ];\n  if (mediaType == 'image')\n    attrs.push(['alt', '']);\n  token.children = tokens;\n  token.content = content;\n\n  if (title)\n    attrs.push(['title', title]);\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n\n}\n\n\n/**\n * Guess the media type represented by a URL based on the file extension,\n * if any\n *\n * @param {String} url\n *  any valid URL\n * @returns {String}\n *  a type identifier: 'image' (default for all unrecognized URLs), 'audio'\n *  or 'video'\n * @memberof HTML5Media\n */\nfunction guessMediaType(url) {\n  const extensionMatch = url.match(/\\.([^/.]+)$/);\n  if (extensionMatch === null)\n    return 'image';\n  const extension = extensionMatch[1];\n  if (validAudioExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'audio';\n  else if (validVideoExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'video';\n  else\n    return 'image';\n}\n\n\n/**\n * Render tokens of the video/audio type to HTML5 tags\n *\n * @param {Object} tokens\n *  token stream\n * @param {Number} idx\n *  which token are we rendering\n * @param {Object} options\n *  Markdown-It options, including this plugin's settings\n * @param {Object} env\n *  Markdown-It environment, potentially including language setting\n * @param {MarkdownIt} md\n *  instance used for utilities access\n * @returns {String}\n *  rendered token\n * @memberof HTML5Media\n */\nfunction renderMedia(tokens, idx, options, env, md) {\n  const token = tokens[idx];\n  const type = token.type;\n  if (type !== 'video' && type !== 'audio')\n    return '';\n  let attrs = options.html5Media[`${type}Attrs`].trim();\n  if (attrs)\n    attrs = ' ' + attrs;\n\n  // We'll always have a URL for non-image media: they are detected by URL\n  const url = token.attrs[token.attrIndex('src')][1];\n\n  // Title is set like this: ![descriptive text](video.mp4 \"title\")\n  const title = token.attrIndex('title') != -1 ?\n    ` title=\"${md.utils.escapeHtml(token.attrs[token.attrIndex('title')][1])}\"` :\n    '';\n\n  const fallbackText =\n    translate(env.language, `html5 ${type} not supported`) + '\\n' +\n    translate(env.language, 'html5 media fallback link', [url]);\n\n  const description = token.content ?\n    '\\n' + translate(env.language, 'html5 media description', [md.utils.escapeHtml(token.content)]) :\n    '';\n\n  return `<${type} src=\"${url}\"${title}${attrs}>\\n` +\n    `${fallbackText}${description}\\n` +\n    `</${type}>`;\n}\n\n\n/**\n * The main plugin function, exported as module.exports\n *\n * @param {MarkdownIt} md\n *  instance, automatically passed by md.use\n * @param {Object} [options]\n *  configuration\n * @param {String} [options.videoAttrs='controls class=\"html5-video-player\"']\n *  attributes to include inside `<video>` tags\n * @param {String} [options.audioAttrs='controls class=\"html5-audio-player\"']\n *  attributes to include inside `<audio>` tags\n * @param {MessagesObj} [options.messages=built-in messages]\n *  human-readable text that is part of the output\n * @memberof HTML5Media\n */\nfunction html5Media(md, options = {}) {\n  if (options.messages)\n    messages = options.messages;\n  if (options.translateFn)\n    translate = options.translateFn;\n\n  const videoAttrs = options.videoAttrs !== undefined ?\n    options.videoAttrs :\n    'controls class=\"html5-video-player\"';\n  const audioAttrs = options.audioAttrs !== undefined ?\n    options.audioAttrs :\n    'controls class=\"html5-audio-player\"';\n\n  md.inline.ruler.at('image', (tokens, silent) => tokenizeImagesAndMedia(tokens, silent, md));\n\n  md.renderer.rules.video = md.renderer.rules.audio =\n    (tokens, idx, opt, env) => {\n      opt.html5Media = {\n        videoAttrs,\n        audioAttrs\n      };\n      return renderMedia(tokens, idx, opt, env, md);\n    };\n}\n\nmodule.exports = {\n  html5Media,\n  messages, // For partial customization of messages\n  guessMediaType\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","\"use strict\";\n/**\n * @file markdown 解析\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar markdown_it_1 = (0, tslib_1.__importDefault)(require(\"markdown-it\"));\n// @ts-ignore\nvar markdown_it_html5_media_1 = require(\"markdown-it-html5-media\");\nvar markdown = (0, markdown_it_1.default)();\nmarkdown.use(markdown_it_html5_media_1.html5Media);\nfunction default_1(content, options) {\n    if (options) {\n        markdown.set(options);\n    }\n    return markdown.render(content);\n}\nexports.default = default_1;\n//# sourceMappingURL=./utils/markdown.js.map\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\nvar markdown_1 = (0, tslib_1.__importDefault)(require(\"../utils/markdown\"));\nvar Markdown = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(Markdown, _super);\n    function Markdown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.htmlRef = _this.htmlRef.bind(_this);\n        return _this;\n    }\n    Markdown.prototype.htmlRef = function (dom) {\n        this.dom = dom;\n        if (!dom) {\n            return;\n        }\n        this._render();\n    };\n    Markdown.prototype.componentDidUpdate = function (nextProps) {\n        if (this.props.content !== nextProps.content) {\n            this._render();\n        }\n    };\n    Markdown.prototype._render = function () {\n        var _a = this.props, content = _a.content, options = _a.options;\n        this.dom.innerHTML = (0, markdown_1.default)(content, options);\n    };\n    Markdown.prototype.render = function () {\n        return (react_1.default.createElement(\"div\", { \"data-testid\": \"markdown-body\", className: \"markdown-body\", ref: this.htmlRef }));\n    };\n    Markdown.defaultProps = {\n        content: '',\n        options: {\n            linkify: true\n        }\n    };\n    return Markdown;\n}(react_1.default.Component));\nexports.default = Markdown;\n//# sourceMappingURL=./components/Markdown.js.map\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/"],"sourceRoot":""}