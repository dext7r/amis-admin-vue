{"version":3,"sources":["webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/index.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/index.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/decode.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/format.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/.pnpm/linkify-it@3.0.3/node_modules/linkify-it/lib/re.js","webpack:///./node_modules/.pnpm/markdown-it-html5-media@0.7.1/node_modules/markdown-it-html5-media/lib/index.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/index.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/encode.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/token.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/.pnpm/amis@1.9.1-beta.13_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/amis/lib/utils/markdown.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/.pnpm/punycode@1.4.1/node_modules/punycode/punycode.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/index.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/index.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/.pnpm/amis@1.9.1-beta.13_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/amis/lib/components/Markdown.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/.pnpm/markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/parse.js","webpack:///./node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js"],"names":["isSpace","module","exports","state","silent","pmax","max","ws","pos","src","charCodeAt","pending","length","posMax","slice","push","Ruler","_rules","ParserBlock","this","ruler","i","alt","prototype","tokenize","startLine","endLine","ok","rules","getRules","len","line","hasEmptyLines","maxNesting","md","options","skipEmptyLines","sCount","blkIndent","level","tight","isEmpty","parse","env","outTokens","State","lineMax","Token","StateCore","tokens","inlineMode","isWhiteSpace","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","str","index","ch","substr","process_inlines","token","text","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","j","isSingle","stack","openQuote","closeQuote","type","content","OUTER","lastIndex","exec","String","fromCharCode","single","quotes","blkIdx","typographer","test","children","html","xhtmlOut","breaks","langPrefix","linkify","highlight","components","core","block","inline","assign","obj","sources","Array","call","arguments","forEach","source","Object","keys","key","_class","toString","isString","isObject","isRegExp","isFunction","escapeRE","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","k","hasOwnProperty","defaultSchemas","validate","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","match","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","split","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","raw","url","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","utils","helpers","Renderer","ParserCore","ParserInline","mdurl","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","trim","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","renderer","configure","presets","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","process","render","parseInline","renderInline","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","c","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","info","replace_rare","disableNested","found","marker","prevPos","labelEnd","oldPos","skipToken","isTerminatorChar","unescapeAll","code","lines","tmp","bMarks","tShift","eMarks","skipSpacesBack","skipCharsBack","markup","entities","has","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","parseInt","_hasOwnProperty","object","TypeError","arrayReplaceAt","newElements","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","unescapeMd","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","normalizeReference","toUpperCase","lib","ucmicro","parseLinkLabel","parseLinkDestination","parseLinkTitle","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","l","hidden","contentStart","indent","indentAfterMarker","initial","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","nextLine","offset","oldListIndent","oldParentType","oldSCount","oldTShift","oldTight","posAfterMarker","prevEmptyEnd","terminate","terminatorRules","isTerminatingParagraph","listIndent","parentType","Number","skipSpaces","attrs","bsCount","Math","min","decodeCache","getDecodeCache","exclude","cache","string","seq","b1","b2","b3","b4","chr","componentChars","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","StateBlock","s","indent_found","ddIndent","tag","nesting","from","skipChars","getLines","begin","keepLastLF","lineIndent","first","last","queue","lineStart","postProcess","delimiters","startDelim","endDelim","isStrong","scanned","scanDelims","open","can_open","close","can_close","curr","tokens_meta","loneMarkers","pop","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","langAttrs","attrIndex","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","cnt","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","slashes","auth","port","pathname","hash","EMAIL_RE","AUTOLINK_RE","fullUrl","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","validAudioExtensions","validVideoExtensions","messages","en","translate","language","messageKey","messageParams","message","param","tokenizeImagesAndMedia","label","labelStart","ref","res","title","href","references","mediaType","guessMediaType","extensionMatch","extension","renderMedia","html5Media","fallbackText","description","translateFn","videoAttrs","undefined","audioAttrs","at","video","audio","opt","StateInline","pendingLevel","_prev_delimiters","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","ESCAPED","isLetter","lc","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","Core","parseReference","defineProperty","tslib_1","markdown_it_1","__importDefault","markdown_it_html5_media_1","markdown","default_1","getLine","escapedSplit","isEscaped","lastPos","current","substring","lineText","columns","columnCount","aligns","tableLines","tbodyLines","firstCh","secondCh","isLinkOpen","isLinkClose","currentToken","nodes","ln","htmlLinkLevel","urlText","links","blockTokens","params","mem","haveEndMarker","root","nodeType","freeGlobal","global","window","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","fn","mapDomain","parts","labels","encoded","ucs2decode","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","out","basic","oldi","w","baseMinusT","inputLength","n","bias","lastIndexOf","splice","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","_endLine","destEndPos","destEndLineNo","_rules2","NEWLINES_RE","NULL_RE","Any","Cc","Cf","P","Z","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","spaceAfterMarker","isOutdented","oldLineMax","tok","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","react_1","markdown_1","Markdown","_super","props","_this","htmlRef","bind","__extends","dom","_render","componentDidUpdate","nextProps","_a","innerHTML","createElement","className","defaultProps","Component","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","before","beforeName","ruleName","after","afterName","chainName","block_names","HTML_SEQUENCES","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm"],"mappings":"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","file":"js/chunk-41c3bee7.85e5414e.js","sourcesContent":["// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n/* eslint complexity: \"off\" */\n\n\n/**\n * A minimalist `markdown-it` plugin for parsing video/audio references inside\n * markdown image syntax as `<video>` / `<audio>` tags.\n *\n * @namespace HTML5Media\n */\n\n// We can only detect video/audio files from the extension in the URL.\n// We ignore MP1 and MP2 (not in active use) and default to video for ambiguous\n// extensions (MPG, MP4)\nconst validAudioExtensions = ['aac', 'm4a', 'mp3', 'oga', 'ogg', 'wav'];\nconst validVideoExtensions = ['mp4', 'm4v', 'ogv', 'webm', 'mpg', 'mpeg'];\n\n/**\n * @property {Object} messages\n * @property {Object} messages.languageCode\n *  a set of messages identified with a language code, typically an ISO639 code\n * @property {String} messages.languageCode.messageKey\n *  an individual translation of a message to that language, identified with a\n *  message key\n * @typedef {Object} MessagesObj\n */\nlet messages = {\n  en: {\n    'html5 video not supported': 'Your browser does not support playing HTML5 video.',\n    'html5 audio not supported': 'Your browser does not support playing HTML5 audio.',\n    'html5 media fallback link': 'You can <a href=\"%s\" download>download the file</a> instead.',\n    'html5 media description': 'Here is a description of the content: %s'\n  }\n};\n\n/**\n * You can override this function using options.translateFn.\n *\n * @param {String} language\n *  a language code, typically an ISO 639-[1-3] code.\n * @param {String} messageKey\n *  an identifier for the message, typically a short descriptive text\n * @param {String[]} messageParams\n *  Strings to be substituted into the message using some pattern, e.g., %s or\n *  %1$s, %2$s. By default we only use a simple %s pattern.\n * @returns {String}\n *  the translation to use\n * @memberof HTML5Media\n */\nlet translate = function(language, messageKey, messageParams) {\n\n  // Revert back to English default if no message object, or no translation\n  // for this language\n  if (!messages[language] || !messages[language][messageKey])\n    language = 'en';\n\n  if (!messages[language])\n    return '';\n\n  let message = messages[language][messageKey] || '';\n\n  if (messageParams)\n    for (let param of messageParams)\n      message = message.replace('%s', param);\n\n  return message;\n};\n\n\n/**\n * A fork of the built-in image tokenizer which guesses video/audio files based\n * on their extension, and tokenizes them accordingly.\n *\n * @param {Object} state\n *  Markdown-It state\n * @param {Boolean} silent\n *  if true, only validate, don't tokenize\n * @param {MarkdownIt} md\n *  instance of Markdown-It used for utility functions\n * @returns {Boolean}\n * @memberof HTML5Media\n */\nfunction tokenizeImagesAndMedia(state, silent, md) {\n  let attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title,\n    token, tokens, start;\n  let href = '',\n    oldPos = state.pos,\n    max = state.posMax;\n\n  // Exclamation mark followed by open square bracket - ![ - otherwise abort\n  if (state.src.charCodeAt(state.pos) !== 0x21 ||\n    state.src.charCodeAt(state.pos + 1) !== 0x5B)\n    return false;\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // Parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0)\n    return false;\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28) { // Parenthesis: (\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A) // LF \\n\n        break;\n    }\n    if (pos >= max)\n      return false;\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A)\n        break;\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!md.utils.isSpace(code) && code !== 0x0A)\n          break;\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29) { // Parenthesis: )\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined')\n      return false;\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B) { // Bracket: [\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label)\n      label = state.src.slice(labelStart, labelEnd);\n\n    ref = state.env.references[md.utils.normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n\n  if (silent)\n    return true;\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  content = state.src.slice(labelStart, labelEnd);\n\n  state.md.inline.parse(\n    content,\n    state.md,\n    state.env,\n    tokens = []\n  );\n\n  const mediaType = guessMediaType(href);\n  const tag = mediaType == 'image' ? 'img' : mediaType;\n\n  token = state.push(mediaType, tag, 0);\n  token.attrs = attrs = [\n    ['src', href]\n  ];\n  if (mediaType == 'image')\n    attrs.push(['alt', '']);\n  token.children = tokens;\n  token.content = content;\n\n  if (title)\n    attrs.push(['title', title]);\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n\n}\n\n\n/**\n * Guess the media type represented by a URL based on the file extension,\n * if any\n *\n * @param {String} url\n *  any valid URL\n * @returns {String}\n *  a type identifier: 'image' (default for all unrecognized URLs), 'audio'\n *  or 'video'\n * @memberof HTML5Media\n */\nfunction guessMediaType(url) {\n  const extensionMatch = url.match(/\\.([^/.]+)$/);\n  if (extensionMatch === null)\n    return 'image';\n  const extension = extensionMatch[1];\n  if (validAudioExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'audio';\n  else if (validVideoExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'video';\n  else\n    return 'image';\n}\n\n\n/**\n * Render tokens of the video/audio type to HTML5 tags\n *\n * @param {Object} tokens\n *  token stream\n * @param {Number} idx\n *  which token are we rendering\n * @param {Object} options\n *  Markdown-It options, including this plugin's settings\n * @param {Object} env\n *  Markdown-It environment, potentially including language setting\n * @param {MarkdownIt} md\n *  instance used for utilities access\n * @returns {String}\n *  rendered token\n * @memberof HTML5Media\n */\nfunction renderMedia(tokens, idx, options, env, md) {\n  const token = tokens[idx];\n  const type = token.type;\n  if (type !== 'video' && type !== 'audio')\n    return '';\n  let attrs = options.html5Media[`${type}Attrs`].trim();\n  if (attrs)\n    attrs = ' ' + attrs;\n\n  // We'll always have a URL for non-image media: they are detected by URL\n  const url = token.attrs[token.attrIndex('src')][1];\n\n  // Title is set like this: ![descriptive text](video.mp4 \"title\")\n  const title = token.attrIndex('title') != -1 ?\n    ` title=\"${md.utils.escapeHtml(token.attrs[token.attrIndex('title')][1])}\"` :\n    '';\n\n  const fallbackText =\n    translate(env.language, `html5 ${type} not supported`) + '\\n' +\n    translate(env.language, 'html5 media fallback link', [url]);\n\n  const description = token.content ?\n    '\\n' + translate(env.language, 'html5 media description', [md.utils.escapeHtml(token.content)]) :\n    '';\n\n  return `<${type} src=\"${url}\"${title}${attrs}>\\n` +\n    `${fallbackText}${description}\\n` +\n    `</${type}>`;\n}\n\n\n/**\n * The main plugin function, exported as module.exports\n *\n * @param {MarkdownIt} md\n *  instance, automatically passed by md.use\n * @param {Object} [options]\n *  configuration\n * @param {String} [options.videoAttrs='controls class=\"html5-video-player\"']\n *  attributes to include inside `<video>` tags\n * @param {String} [options.audioAttrs='controls class=\"html5-audio-player\"']\n *  attributes to include inside `<audio>` tags\n * @param {MessagesObj} [options.messages=built-in messages]\n *  human-readable text that is part of the output\n * @memberof HTML5Media\n */\nfunction html5Media(md, options = {}) {\n  if (options.messages)\n    messages = options.messages;\n  if (options.translateFn)\n    translate = options.translateFn;\n\n  const videoAttrs = options.videoAttrs !== undefined ?\n    options.videoAttrs :\n    'controls class=\"html5-video-player\"';\n  const audioAttrs = options.audioAttrs !== undefined ?\n    options.audioAttrs :\n    'controls class=\"html5-audio-player\"';\n\n  md.inline.ruler.at('image', (tokens, silent) => tokenizeImagesAndMedia(tokens, silent, md));\n\n  md.renderer.rules.video = md.renderer.rules.audio =\n    (tokens, idx, opt, env) => {\n      opt.html5Media = {\n        videoAttrs,\n        audioAttrs\n      };\n      return renderMedia(tokens, idx, opt, env, md);\n    };\n}\n\nmodule.exports = {\n  html5Media,\n  messages, // For partial customization of messages\n  guessMediaType\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","\"use strict\";\n/**\n * @file markdown 解析\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar markdown_it_1 = (0, tslib_1.__importDefault)(require(\"markdown-it\"));\n// @ts-ignore\nvar markdown_it_html5_media_1 = require(\"markdown-it-html5-media\");\nvar markdown = (0, markdown_it_1.default)();\nmarkdown.use(markdown_it_html5_media_1.html5Media);\nfunction default_1(content, options) {\n    if (options) {\n        markdown.set(options);\n    }\n    return markdown.render(content);\n}\nexports.default = default_1;\n//# sourceMappingURL=./utils/markdown.js.map\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\nvar markdown_1 = (0, tslib_1.__importDefault)(require(\"../utils/markdown\"));\nvar Markdown = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(Markdown, _super);\n    function Markdown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.htmlRef = _this.htmlRef.bind(_this);\n        return _this;\n    }\n    Markdown.prototype.htmlRef = function (dom) {\n        this.dom = dom;\n        if (!dom) {\n            return;\n        }\n        this._render();\n    };\n    Markdown.prototype.componentDidUpdate = function (nextProps) {\n        if (this.props.content !== nextProps.content) {\n            this._render();\n        }\n    };\n    Markdown.prototype._render = function () {\n        var _a = this.props, content = _a.content, options = _a.options;\n        this.dom.innerHTML = (0, markdown_1.default)(content, options);\n    };\n    Markdown.prototype.render = function () {\n        return (react_1.default.createElement(\"div\", { \"data-testid\": \"markdown-body\", className: \"markdown-body\", ref: this.htmlRef }));\n    };\n    Markdown.defaultProps = {\n        content: '',\n        options: {\n            linkify: true\n        }\n    };\n    return Markdown;\n}(react_1.default.Component));\nexports.default = Markdown;\n//# sourceMappingURL=./components/Markdown.js.map\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/"],"sourceRoot":""}