{"version":3,"sources":["webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+punycode@1.4.1/node_modules/punycode/punycode.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+mdurl@1.0.1/node_modules/mdurl/format.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+mdurl@1.0.1/node_modules/mdurl/encode.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+mdurl@1.0.1/node_modules/mdurl/decode.js","webpack:///./node_modules/.pnpm/amis@1.9.1-beta.12_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/amis/lib/utils/markdown.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/.pnpm/markdown-it-html5-media@0.7.1/node_modules/markdown-it-html5-media/lib/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+mdurl@1.0.1/node_modules/mdurl/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+linkify-it@3.0.3/node_modules/linkify-it/lib/re.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+uc.micro@1.0.6/node_modules/uc.micro/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/.pnpm/amis@1.9.1-beta.12_wcqkhtmu7mswc6yz4uyexck3ty/node_modules/amis/lib/components/Markdown.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+linkify-it@3.0.3/node_modules/linkify-it/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+mdurl@1.0.1/node_modules/mdurl/parse.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/token.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+markdown-it@12.3.2/node_modules/markdown-it/index.js","webpack:///./node_modules/.pnpm/mirrors.tencent.com+uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js"],"names":["module","exports","state","startLine","endLine","content","terminate","i","l","token","pos","max","level","marker","oldParentType","nextLine","terminatorRules","md","block","ruler","getRules","sCount","blkIndent","parentType","isEmpty","bMarks","tShift","eMarks","src","charCodeAt","skipChars","skipSpaces","length","getLines","trim","line","push","String","markup","fromCharCode","map","children","lineMax","root","nodeType","freeGlobal","global","window","self","punycode","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","error","type","RangeError","array","fn","result","mapDomain","string","parts","split","replace","labels","encoded","join","ucs2decode","value","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","out","basic","j","index","oldi","w","t","baseMinusT","inputLength","n","bias","lastIndexOf","splice","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","test","slice","toLowerCase","toASCII","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","assign","unescapeAll","escapeHtml","default_rules","Renderer","this","rules","code_inline","tokens","idx","options","env","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","prototype","nextToken","needLf","hidden","nesting","tag","renderInline","len","render","Ruler","__rules__","__cache__","__find__","name","__compile__","chains","forEach","rule","enabled","alt","altName","chain","at","opt","Error","before","beforeName","ruleName","after","afterName","enable","list","ignoreInvalid","Array","isArray","enableOnly","disable","chainName","last","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","c","r","p","tm","replaceFn","match","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","_rules","ParserBlock","tokenize","ok","hasEmptyLines","maxNesting","skipEmptyLines","tight","parse","outTokens","State","encodeCache","getEncodeCache","exclude","ch","cache","toString","toUpperCase","keepEscaped","code","nextCode","defaultChars","encodeURIComponent","componentChars","isTerminatorChar","silent","posMax","pending","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","parseInt","Object","defineProperty","tslib_1","markdown_it_1","__importDefault","markdown_it_html5_media_1","markdown","default","default_1","set","use","html5Media","NEWLINES_RE","NULL_RE","str","isSpace","cnt","start","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","pmax","ws","parseLinkLabel","parseLinkDestination","parseLinkTitle","ESCAPED","Core","process","arrayReplaceAt","isLinkOpen","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","linkify","pretest","normalizeLink","validateLink","schema","normalizeLinkText","Token","lastIndex","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","hasOwnProperty","open","end","curr","tokens_meta","isWhiteSpace","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","substr","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","exec","single","quotes","tmp","skipSpacesBack","skipCharsBack","adjustTab","initial","lastLineEmpty","lines","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","EMAIL_RE","AUTOLINK_RE","StateBlock","s","indent","indent_found","ddIndent","listIndent","from","min","begin","keepLastLF","lineIndent","first","queue","lineStart","validAudioExtensions","validVideoExtensions","messages","en","translate","language","messageKey","messageParams","message","param","tokenizeImagesAndMedia","label","labelEnd","labelStart","ref","res","title","href","oldPos","helpers","utils","references","normalizeReference","inline","mediaType","guessMediaType","extensionMatch","extension","renderMedia","fallbackText","description","translateFn","videoAttrs","undefined","audioAttrs","renderer","video","audio","StateCore","inlineMode","parseReference","disableNested","found","prevPos","skipToken","postProcess","startDelim","endDelim","loneMarkers","pop","scanned","scanDelims","can_open","can_close","entities","has","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","StateInline","pendingLevel","_prev_delimiters","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","format","opts","re","src_Any","source","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","ParserCore","ParserInline","LinkifyIt","mdurl","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","isString","core","configure","presets","components","keys","rules2","ruler2","concat","missed","filter","plugin","args","call","arguments","apply","parseInline","params","mem","haveEndMarker","Any","Cc","Cf","P","Z","html","getLine","escapedSplit","isEscaped","current","substring","lineText","columns","columnCount","aligns","tableLines","tbodyLines","firstCh","secondCh","shift","react_1","markdown_1","Markdown","_super","props","_this","htmlRef","bind","__extends","dom","_render","componentDidUpdate","nextProps","_a","innerHTML","createElement","className","defaultProps","Component","tok","_rules2","_class","obj","_hasOwnProperty","object","key","sources","TypeError","newElements","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","unescapeMd","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","escapeRE","UNICODE_PUNCT_RE","lib","ucmicro","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","http","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","alias","slist","schema_test","schema_search","Match","__last_index__","__schema__","raw","createMatch","schemas","add","definition","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","_endLine","destEndPos","destEndLineNo","block_names","HTML_SEQUENCES","meta","attrPush","attrData","attrSet","attrGet","attrJoin","isLetter","lc","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","Number","isStrong"],"mappings":"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","file":"js/chunk-9d17d96e.a08db3b0.js","sourcesContent":["// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\"use strict\";\n/**\n * @file markdown 解析\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar markdown_it_1 = (0, tslib_1.__importDefault)(require(\"markdown-it\"));\n// @ts-ignore\nvar markdown_it_html5_media_1 = require(\"markdown-it-html5-media\");\nvar markdown = (0, markdown_it_1.default)();\nmarkdown.use(markdown_it_html5_media_1.html5Media);\nfunction default_1(content, options) {\n    if (options) {\n        markdown.set(options);\n    }\n    return markdown.render(content);\n}\nexports.default = default_1;\n//# sourceMappingURL=./utils/markdown.js.map\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","'use strict';\n/* eslint complexity: \"off\" */\n\n\n/**\n * A minimalist `markdown-it` plugin for parsing video/audio references inside\n * markdown image syntax as `<video>` / `<audio>` tags.\n *\n * @namespace HTML5Media\n */\n\n// We can only detect video/audio files from the extension in the URL.\n// We ignore MP1 and MP2 (not in active use) and default to video for ambiguous\n// extensions (MPG, MP4)\nconst validAudioExtensions = ['aac', 'm4a', 'mp3', 'oga', 'ogg', 'wav'];\nconst validVideoExtensions = ['mp4', 'm4v', 'ogv', 'webm', 'mpg', 'mpeg'];\n\n/**\n * @property {Object} messages\n * @property {Object} messages.languageCode\n *  a set of messages identified with a language code, typically an ISO639 code\n * @property {String} messages.languageCode.messageKey\n *  an individual translation of a message to that language, identified with a\n *  message key\n * @typedef {Object} MessagesObj\n */\nlet messages = {\n  en: {\n    'html5 video not supported': 'Your browser does not support playing HTML5 video.',\n    'html5 audio not supported': 'Your browser does not support playing HTML5 audio.',\n    'html5 media fallback link': 'You can <a href=\"%s\" download>download the file</a> instead.',\n    'html5 media description': 'Here is a description of the content: %s'\n  }\n};\n\n/**\n * You can override this function using options.translateFn.\n *\n * @param {String} language\n *  a language code, typically an ISO 639-[1-3] code.\n * @param {String} messageKey\n *  an identifier for the message, typically a short descriptive text\n * @param {String[]} messageParams\n *  Strings to be substituted into the message using some pattern, e.g., %s or\n *  %1$s, %2$s. By default we only use a simple %s pattern.\n * @returns {String}\n *  the translation to use\n * @memberof HTML5Media\n */\nlet translate = function(language, messageKey, messageParams) {\n\n  // Revert back to English default if no message object, or no translation\n  // for this language\n  if (!messages[language] || !messages[language][messageKey])\n    language = 'en';\n\n  if (!messages[language])\n    return '';\n\n  let message = messages[language][messageKey] || '';\n\n  if (messageParams)\n    for (let param of messageParams)\n      message = message.replace('%s', param);\n\n  return message;\n};\n\n\n/**\n * A fork of the built-in image tokenizer which guesses video/audio files based\n * on their extension, and tokenizes them accordingly.\n *\n * @param {Object} state\n *  Markdown-It state\n * @param {Boolean} silent\n *  if true, only validate, don't tokenize\n * @param {MarkdownIt} md\n *  instance of Markdown-It used for utility functions\n * @returns {Boolean}\n * @memberof HTML5Media\n */\nfunction tokenizeImagesAndMedia(state, silent, md) {\n  let attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title,\n    token, tokens, start;\n  let href = '',\n    oldPos = state.pos,\n    max = state.posMax;\n\n  // Exclamation mark followed by open square bracket - ![ - otherwise abort\n  if (state.src.charCodeAt(state.pos) !== 0x21 ||\n    state.src.charCodeAt(state.pos + 1) !== 0x5B)\n    return false;\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // Parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0)\n    return false;\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28) { // Parenthesis: (\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A) // LF \\n\n        break;\n    }\n    if (pos >= max)\n      return false;\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!md.utils.isSpace(code) && code !== 0x0A)\n        break;\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!md.utils.isSpace(code) && code !== 0x0A)\n          break;\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29) { // Parenthesis: )\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined')\n      return false;\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B) { // Bracket: [\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label)\n      label = state.src.slice(labelStart, labelEnd);\n\n    ref = state.env.references[md.utils.normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n\n  if (silent)\n    return true;\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  content = state.src.slice(labelStart, labelEnd);\n\n  state.md.inline.parse(\n    content,\n    state.md,\n    state.env,\n    tokens = []\n  );\n\n  const mediaType = guessMediaType(href);\n  const tag = mediaType == 'image' ? 'img' : mediaType;\n\n  token = state.push(mediaType, tag, 0);\n  token.attrs = attrs = [\n    ['src', href]\n  ];\n  if (mediaType == 'image')\n    attrs.push(['alt', '']);\n  token.children = tokens;\n  token.content = content;\n\n  if (title)\n    attrs.push(['title', title]);\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n\n}\n\n\n/**\n * Guess the media type represented by a URL based on the file extension,\n * if any\n *\n * @param {String} url\n *  any valid URL\n * @returns {String}\n *  a type identifier: 'image' (default for all unrecognized URLs), 'audio'\n *  or 'video'\n * @memberof HTML5Media\n */\nfunction guessMediaType(url) {\n  const extensionMatch = url.match(/\\.([^/.]+)$/);\n  if (extensionMatch === null)\n    return 'image';\n  const extension = extensionMatch[1];\n  if (validAudioExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'audio';\n  else if (validVideoExtensions.indexOf(extension.toLowerCase()) != -1)\n    return 'video';\n  else\n    return 'image';\n}\n\n\n/**\n * Render tokens of the video/audio type to HTML5 tags\n *\n * @param {Object} tokens\n *  token stream\n * @param {Number} idx\n *  which token are we rendering\n * @param {Object} options\n *  Markdown-It options, including this plugin's settings\n * @param {Object} env\n *  Markdown-It environment, potentially including language setting\n * @param {MarkdownIt} md\n *  instance used for utilities access\n * @returns {String}\n *  rendered token\n * @memberof HTML5Media\n */\nfunction renderMedia(tokens, idx, options, env, md) {\n  const token = tokens[idx];\n  const type = token.type;\n  if (type !== 'video' && type !== 'audio')\n    return '';\n  let attrs = options.html5Media[`${type}Attrs`].trim();\n  if (attrs)\n    attrs = ' ' + attrs;\n\n  // We'll always have a URL for non-image media: they are detected by URL\n  const url = token.attrs[token.attrIndex('src')][1];\n\n  // Title is set like this: ![descriptive text](video.mp4 \"title\")\n  const title = token.attrIndex('title') != -1 ?\n    ` title=\"${md.utils.escapeHtml(token.attrs[token.attrIndex('title')][1])}\"` :\n    '';\n\n  const fallbackText =\n    translate(env.language, `html5 ${type} not supported`) + '\\n' +\n    translate(env.language, 'html5 media fallback link', [url]);\n\n  const description = token.content ?\n    '\\n' + translate(env.language, 'html5 media description', [md.utils.escapeHtml(token.content)]) :\n    '';\n\n  return `<${type} src=\"${url}\"${title}${attrs}>\\n` +\n    `${fallbackText}${description}\\n` +\n    `</${type}>`;\n}\n\n\n/**\n * The main plugin function, exported as module.exports\n *\n * @param {MarkdownIt} md\n *  instance, automatically passed by md.use\n * @param {Object} [options]\n *  configuration\n * @param {String} [options.videoAttrs='controls class=\"html5-video-player\"']\n *  attributes to include inside `<video>` tags\n * @param {String} [options.audioAttrs='controls class=\"html5-audio-player\"']\n *  attributes to include inside `<audio>` tags\n * @param {MessagesObj} [options.messages=built-in messages]\n *  human-readable text that is part of the output\n * @memberof HTML5Media\n */\nfunction html5Media(md, options = {}) {\n  if (options.messages)\n    messages = options.messages;\n  if (options.translateFn)\n    translate = options.translateFn;\n\n  const videoAttrs = options.videoAttrs !== undefined ?\n    options.videoAttrs :\n    'controls class=\"html5-video-player\"';\n  const audioAttrs = options.audioAttrs !== undefined ?\n    options.audioAttrs :\n    'controls class=\"html5-audio-player\"';\n\n  md.inline.ruler.at('image', (tokens, silent) => tokenizeImagesAndMedia(tokens, silent, md));\n\n  md.renderer.rules.video = md.renderer.rules.audio =\n    (tokens, idx, opt, env) => {\n      opt.html5Media = {\n        videoAttrs,\n        audioAttrs\n      };\n      return renderMedia(tokens, idx, opt, env, md);\n    };\n}\n\nmodule.exports = {\n  html5Media,\n  messages, // For partial customization of messages\n  guessMediaType\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = (0, tslib_1.__importDefault)(require(\"react\"));\nvar markdown_1 = (0, tslib_1.__importDefault)(require(\"../utils/markdown\"));\nvar Markdown = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(Markdown, _super);\n    function Markdown(props) {\n        var _this = _super.call(this, props) || this;\n        _this.htmlRef = _this.htmlRef.bind(_this);\n        return _this;\n    }\n    Markdown.prototype.htmlRef = function (dom) {\n        this.dom = dom;\n        if (!dom) {\n            return;\n        }\n        this._render();\n    };\n    Markdown.prototype.componentDidUpdate = function (nextProps) {\n        if (this.props.content !== nextProps.content) {\n            this._render();\n        }\n    };\n    Markdown.prototype._render = function () {\n        var _a = this.props, content = _a.content, options = _a.options;\n        this.dom.innerHTML = (0, markdown_1.default)(content, options);\n    };\n    Markdown.prototype.render = function () {\n        return (react_1.default.createElement(\"div\", { \"data-testid\": \"markdown-body\", className: \"markdown-body\", ref: this.htmlRef }));\n    };\n    Markdown.defaultProps = {\n        content: '',\n        options: {\n            linkify: true\n        }\n    };\n    return Markdown;\n}(react_1.default.Component));\nexports.default = Markdown;\n//# sourceMappingURL=./components/Markdown.js.map\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/"],"sourceRoot":""}